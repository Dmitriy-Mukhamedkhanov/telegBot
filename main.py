import telebot
import dictionary
from telebot import types
import button
import time
import csv
import Game

from config import TOTAL_WIN, TOTAL_DRAW, TOTAL_LOSE, TOTAL_WIN_ADMIN, TOTAL_DRAW_ADMIN, TOTAL_LOSE_ADMIN, ID,\
    dictionary_total, API_TOKEN


bot = telebot.TeleBot(API_TOKEN)


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    print(message.from_user.id)

    if message.from_user.id == ID:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤—ã
        markup.row('–ü–æ—ç–∑–∏—è', '–ò–≥—Ä–∞')
        markup.row('–¢–û–ü-–∏–≥—Ä–æ–∫–æ–≤')
        bot.reply_to(message, "Howdy, how are you doing?",reply_markup=markup)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤—ã
        markup.row('–ü–æ—ç–∑–∏—è', '–ò–≥—Ä–∞')
        bot.reply_to(message, "Howdy, how are you doing?", reply_markup=markup)


@bot.message_handler(content_types='text')
def start_message(message):
    name_dic = dictionary.DIC()
    if message.text in name_dic:
        bot.send_message(message.from_user.id, name_dic[message.text])
    elif message.text == "–ß—Ç–æ –¥–µ–ª–∞—Ç—å?":\
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å?")
    elif message.text == "–ü–æ—ç–∑–∏—è":\
        bot.send_message(message.from_user.id, send_welcome(message))
    elif message.text == "–ò–≥—Ä–∞" :\
        bot.send_message(message.from_user.id, send_Game(message))
    elif message.text == "–¢–û–ü-–∏–≥—Ä–æ–∫–æ–≤" :\
        bot.send_message(message.from_user.id, top_players(message))
    else:
        print(message.from_user.id)
        bot.send_message(message.chat.id, f"—è –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞: {message.text} ")
        bot.send_message(message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –∑–∞–ø—Ä–æ—Å—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:"
                                          "–ù–∞–ø–∏—à–∏ –∏–º—è:\n –í–∞—Å—è,\n –ü–µ—Ç—è,\n –ö–æ–ª—è,\n –ú–∞—à–∞,\n –ü–µ—Ç—è\n –∏–ª–∏"
                                          " –∫–æ–º–∞–Ω–¥—ã /start, /help, /Game\n"
                                          "–¥–ª—è –ø–æ—ç–∑–∏–∏ –Ω–∞–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /poetry")


@bot.message_handler(ccommands=['Game']) # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ = –ü–æ—ç–∑–∏—è, —Ç–æ ...
def send_Game(message):
    if message.from_user.id == ID:
        markup_in = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤—ã –∏–Ω–ª–∞–π–Ω
        button1 = types.InlineKeyboardButton('ü§ú', callback_data='button1')
        button2 = types.InlineKeyboardButton('‚úÇÔ∏è', callback_data='button2')
        button3 = types.InlineKeyboardButton('‚óΩÔ∏è', callback_data='button3')
        button4 = types.InlineKeyboardButton('–û–±—â–∏–π –°–±—Ä–æ—Å', callback_data='button4')
        button5 = types.InlineKeyboardButton('–°–±—Ä–æ—Å', callback_data='button5')
        button6 = types.InlineKeyboardButton('–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='button6')
        markup_in.add(button1, button2, button3, button4, button5, button6)
        bot.reply_to(message,f"–ò–≥—Ä–∞–µ—Ç –ê–î–ú–ò–ù: {message.from_user.first_name}", reply_markup=markup_in)
    else:
        markup_in = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤—ã –∏–Ω–ª–∞–π–Ω
        button1 = types.InlineKeyboardButton('ü§ú', callback_data='button1')
        button2 = types.InlineKeyboardButton('‚úÇÔ∏è', callback_data='button2')
        button3 = types.InlineKeyboardButton('‚óΩÔ∏è', callback_data='button3')
        button5 = types.InlineKeyboardButton('–°–±—Ä–æ—Å', callback_data='button5')
        button6 = types.InlineKeyboardButton('–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='button6')
        markup_in.add(button1, button2, button3, button5, button6)
        bot.reply_to(message, f"–ò–≥—Ä–∞–µ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name}", reply_markup=markup_in)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True) # –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ btn1 –∏ btn2
def callback_inline(call):
    global TOTAL_WIN
    global TOTAL_DRAW
    global TOTAL_LOSE
    global TOTAL_WIN_ADMIN
    global TOTAL_DRAW_ADMIN
    global TOTAL_LOSE_ADMIN

    if call.data == 'btn1': # data —ç—Ç–æ ???????????
        name_poetry = dictionary.POE()
        bot.send_message(call.message.chat.id, name_poetry[1])
    elif call.data == 'btn2':
        name_poetry = dictionary.POE_PUSHKIN()
        bot.send_message(call.message.chat.id, name_poetry[1])
    elif call.data == 'button1':
        stone = Game.Game_stone_scissors_paper('–∫–∞–º–µ–Ω—å')
        bot.send_message(call.message.chat.id, stone)
        total = stone
    elif call.data == 'button2':
        cissors = Game.Game_stone_scissors_paper('–Ω–æ–∂–Ω–∏—Ü—ã')
        bot.send_message(call.message.chat.id, cissors)
        total = cissors
    elif call.data == 'button3':
        paper = Game.Game_stone_scissors_paper('–±—É–º–∞–≥–∞')
        bot.send_message(call.message.chat.id, paper)
        total = paper
    elif call.data == 'button4':
        TOTAL_WIN = 0
        TOTAL_DRAW = 0
        TOTAL_LOSE = 0
        bot.send_message(call.message.chat.id, '–û–±—â–∏–π —Å–±—Ä–æ—Å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω')
    elif call.data == 'button5':
        bot.send_message(call.message.chat.id, '–°–±—Ä–æ—Å –°–µ–±—è')
        TOTAL_WIN_ADMIN = 0
        TOTAL_DRAW_ADMIN = 0
        TOTAL_LOSE_ADMIN = 0
    elif call.data == 'button6':
        total_number_win = TOTAL_WIN_ADMIN + TOTAL_WIN
        total_number_draw = TOTAL_DRAW_ADMIN + TOTAL_DRAW
        total_number_lose = TOTAL_LOSE_ADMIN + TOTAL_LOSE
        total_number_games = total_number_win + total_number_draw + total_number_lose
        bot.send_message(call.message.chat.id, f'–æ–±—â–µ–µ –∫–æ–ª-–≤–æ –≤—Å–µ—Ö –ø–æ–±–µ–¥: {total_number_win}')
        bot.send_message(call.message.chat.id, f'–æ–±—â–µ–µ –∫–æ–ª-–≤–æ –≤—Å–µ—Ö –Ω–∏—á—å–∏—Ö: {total_number_draw}')
        bot.send_message(call.message.chat.id, f'–æ–±—â–µ–µ –∫–æ–ª-–≤–æ –≤—Å–µ—Ö –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π: {total_number_lose}')
        bot.send_message(call.message.chat.id, f'–∏—Ç–æ–≥–æ –∏–≥—Ä: {total_number_games}')
    elif call.data == '–¢–û–ü-–∏–≥—Ä–æ–∫–æ–≤':
        top_players(call.message)

    if call.message.chat.id == ID: # —Å—á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ê–¥–º–∏–Ω–∞
        if total == '–ü–æ–±–µ–¥–∞':
            TOTAL_WIN_ADMIN += 1
        elif total == '–Ω–∏—á—å—è':
            TOTAL_DRAW_ADMIN += 1
        elif total == '–ü—Ä–æ–∏–≥—Ä–∞–ª':
            TOTAL_LOSE_ADMIN += 1
        general_total_admin = TOTAL_WIN_ADMIN + TOTAL_DRAW_ADMIN + TOTAL_LOSE_ADMIN
        bot.send_message(call.message.chat.id, f'–ø–æ–±–µ–¥: {TOTAL_WIN_ADMIN}')
        bot.send_message(call.message.chat.id, f'–Ω–∏—á—å–∏—Ö: {TOTAL_DRAW_ADMIN}')
        bot.send_message(call.message.chat.id, f'–ø—Ä–æ–∏–≥—Ä–∞–Ω–æ: {TOTAL_LOSE_ADMIN}')
        bot.send_message(call.message.chat.id, f'–≤—Å–µ–≥–æ –∏–≥—Ä: {general_total_admin}')
    else:
        if total == '–ü–æ–±–µ–¥–∞': # —Å—á–∏—Ç–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            TOTAL_WIN += 1
        elif total == '–Ω–∏—á—å—è':
            TOTAL_DRAW += 1
        elif total == '–ü—Ä–æ–∏–≥—Ä–∞–ª':
            TOTAL_LOSE += 1
        general_total = TOTAL_WIN + TOTAL_DRAW + TOTAL_LOSE
        bot.send_message(call.message.chat.id, f'–ø–æ–±–µ–¥: {TOTAL_WIN}')
        bot.send_message(call.message.chat.id, f'–Ω–∏—á—å–∏—Ö: {TOTAL_DRAW}')
        bot.send_message(call.message.chat.id, f'–ø—Ä–æ–∏–≥—Ä–∞–Ω–æ: {TOTAL_LOSE}')
        bot.send_message(call.message.chat.id, f'–≤—Å–µ–≥–æ –∏–≥—Ä: {general_total}')


def top_players(message):
    global dictionary_total
    id_user = message.from_user.id
    name_user = message.from_user.username
    player_name = message.from_user.first_name

    bot.reply_to(message, id_user)
    bot.reply_to(message, name_user)
    bot.reply_to(message, player_name)
    bot.send_message(message.from_user.id, TOTAL_WIN) # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    if message.from_user.id == ID:
        dictionary_total[id_user] = {player_name:TOTAL_WIN_ADMIN}
    else:
        dictionary_total[id_user] = {message.from_user.first_name:TOTAL_WIN}

    for i in dictionary_total:
        bot.send_message(message.chat.id, f"{list(dictionary_total[i].keys())[0]} –ø–æ–±–µ–¥: {dictionary_total[i][player_name]}")
        bot.send_message(message.chat.id, f"{dictionary_total}")
    save_data(dictionary_total,player_name)

def save_data(dictionary_total,player_name):
    with open('filename.csv','w',newline='') as file:
        writer = csv.writer(file)
        for i in dictionary_total:
            DIC = f"{list(dictionary_total[i].keys())[0]} –ø–æ–±–µ–¥: {dictionary_total[i][player_name]}"

            writer.writerow(DIC)
    print(dictionary_total)








# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['poetry'])
def send_welcome(message):
    markup_in = types.InlineKeyboardMarkup() # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤—ã –∏–Ω–ª–∞–π–Ω
    btn1 = types.InlineKeyboardButton('–°—Ç–∏—Ö–∏ –¢—é—Ç—á–µ–≤–∞', callback_data='btn1')
    btn2 = types.InlineKeyboardButton('–°—Ç–∏—Ö–∏ –ü—É—à–∫–∏–Ω–∞', callback_data='btn2')
    markup_in.add(btn1, btn2)

    bot.reply_to(message, '–ú–∏–Ω—É—Ç–∫–∞ –ø–æ—ç–∑–∏–∏',reply_markup=markup_in) # –∑–¥–µ—Å—å name_poetry[1] –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω


while True:
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ {e}")
        time.sleep(15)